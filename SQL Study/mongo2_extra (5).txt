Оператор `$all` в MongoDB используется для фильтрации документов, где поле содержит все значения из указанного массива. Он работает с массивами внутри документов и проверяет, содержит ли массив все указанные элементы.

Примеры запросов с использованием оператора `$all` на основе коллекции `ich.imdb.json`:

### Пример 1: Найти фильмы, жанры которых включают **"Short"** и **"Comedy"**.
```json
{
  "genres": { "$all": ["Short", "Comedy"] }
}
```



--------------------------------------

Оператор `$exists` в MongoDB используется для проверки наличия (или отсутствия) определённого поля в документе. Он принимает логические значения `true` или `false`. 

Примеры запросов с использованием оператора `$exists` на основе коллекции `ich.imdb.json`:

### Пример 1: Найти фильмы, в которых есть поле `awards`.
```json
{
  "awards": { "$exists": true }
}
```

Оператор `$in` в MongoDB используется для поиска документов, в которых значение поля совпадает с любым из значений, указанных в массиве. 

Примеры запросов с использованием оператора `$in` на основе коллекции `ich.imdb.json`:

---

### Пример 1: Найти фильмы, которые относятся к жанрам "Comedy" или "Short".
```json
{
  "genres": { "$in": ["Comedy", "Short"] }
}
```

---

### Пример 2: Найти фильмы, снятые в странах "USA" или "France".
```json
{
  "countries": { "$in": ["USA", "France"] }
}
```

---

### Пример 3: Найти фильмы, у которых рейтинг `imdb.rating` равен 6.5, 7.1 или 8.2.
```json
{
  "imdb.rating": { "$in": [6.5, 7.1, 8.2] }
}
```

---


В MongoDB, чтобы сменить базу данных в **MongoDB Shell** или **mongosh**, нужно просто ввести название базы данных с помощью команды `use`.

### Пример:
```shell
use myDatabase
```

---

### Пример взаимодействия:
1. Проверить текущую базу данных:
   ```shell
   db
   ```

2. Переключиться на другую базу данных:
   ```shell
   use ich
   ```

3. Убедиться, что база данных переключилась:
   ```shell
   db
   ```

---


Вы можете создать переменную, чтобы упростить доступ к коллекции, с которой вы работаете чаще всего. 

Необходимо присвоить переменной объект коллекции.

#### Пример:
```shell
use myDatabase
const myCollection = db.imdb;
```

Теперь вы можете выполнять запросы к коллекции через переменную `myCollection`, например:

```shell
myCollection.find({ year: { $gte: 2000 } });
```

---


Метод `find()` в MongoDB используется для поиска документов в коллекции, соответствующих определённым критериям. Он возвращает курсор, с помощью которого можно перебрать найденные документы.

---

### Основной синтаксис
```javascript
db.collection.find(query, projection)
```

1. **`query`**: Условие поиска (фильтр). По умолчанию `{}` возвращает все документы.
2. **`projection`**: Указывает, какие поля отображать в результатах. По умолчанию отображаются все поля.

---

### Примеры запросов с использованием `find()`

#### 1. Вернуть все документы
```javascript
db.imdb.find()
```

---

#### 2. Вернуть фильмы, выпущенные после 2000 года
```javascript
db.imdb.find({ year: { $gt: 2000 } })
```

---

#### 3. Вернуть фильмы, относящиеся к жанру "Comedy"
```javascript
db.imdb.find({ genres: "Comedy" })
```

---

#### 4. Вернуть только названия и годы выхода фильмов
```javascript
db.imdb.find({}, { title: 1, year: 1, _id: 0 })
```


---

### Дополнительные методы:
1. **`limit(n)`**: Установить ограничение на количество возвращаемых документов.
   ```javascript
   db.imdb.find().limit(5);
   ```
2. **`skip(n)`**: Пропустить первые `n` документов.
   ```javascript
   db.imdb.find().skip(10);
   ```
3. **`sort()`**: Сортировка результатов.
   ```javascript
   db.imdb.find().sort({ year: -1 });
   ```

---



Оператор `$size` в MongoDB используется для фильтрации массивов по количеству элементов. Он позволяет найти документы, где массив имеет **точное** количество элементов.

---

### Основной синтаксис:
```javascript
{ "поле_с_массивом": { "$size": n } }
```
Где:
- **`поле_с_массивом`** – поле, содержащее массив.
- **`n`** – точное количество элементов, которое должен иметь массив.

---

### Примеры запросов с `$size` на основе `ich.imdb.json`

#### 1. Найти фильмы, у которых в `genres` ровно **2 жанра**.
```javascript
db.imdb.find({ "genres": { "$size": 2 } })
```

---

