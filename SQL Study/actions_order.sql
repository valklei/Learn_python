-- Последовательность выполнения действий в SQL-запросе:

-- 1. **FROM** — сначала выбираются таблицы или представления для запроса, и если есть операции `JOIN`, то выполняется соединение таблиц.

-- 2. **ON** — применяется для фильтрации соединённых данных, если в запросе используется `JOIN`. Это условие определяет, как должны соединяться строки из разных таблиц.

-- 3. **WHERE** — фильтрует строки в соответствии с условиями, указанными в `WHERE`. Это условие применяется к результатам `FROM` и `JOIN`.

-- 4. **GROUP BY** — группирует данные на основе указанных столбцов. На этом этапе SQL делит строки на группы, которые можно обрабатывать агрегатными функциями, такими как `COUNT`, `SUM`, `AVG` и др.

-- 5. **HAVING** — фильтрует группы, созданные `GROUP BY`, на основе условий, указанных в `HAVING`. Это позволяет применять условия на агрегированные данные.

-- 6. **SELECT** — выбирает и обрабатывает столбцы, указанные для отображения. Здесь применяются функции, алиасы, а также фильтруются только необходимые столбцы.

-- 7. **DISTINCT** — удаляет дубликаты из результатов. Применяется только к выбранным данным после `SELECT`.

-- 8. **ORDER BY** — сортирует строки в конечном результате запроса в порядке, указанном в `ORDER BY`. Сортировка может быть по возрастанию (ASC) или убыванию (DESC).

-- 9. **LIMIT** — ограничивает количество возвращаемых строк. Применяется после сортировки.
